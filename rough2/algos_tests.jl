include("algos.jl")

assert(compute_weighted_sum([(3,1), (2,2), (1,3)]) == 15)
assert(problem1("1-1.txt", false) == 11336)
assert(problem1("1-1.txt", true) == 10548)
assert(problem1("1-2.txt", false) == 145924)
assert(problem1("1-2.txt", true) == 138232)
g = read_edges("1-3.txt", false)
assert(compute_mst_naive(g) == 2624)
assert(find_cluster_distance("3-1-a.txt")==134365)
assert(find_cluster_distance("3-1-b.txt")==7)
assert(max_knapsack_value("knapsack-test-1.txt", false) == 60)
assert(max_knapsack_value("knapsack-test-1b.txt", false) == 60)
assert(max_knapsack_value("knapsack-test-1c.txt", false) == 60)
assert(max_knapsack_value("knapsack-test-2.txt", false) == 2700)
assert(max_knapsack_value("knapsack-test-2b.txt", false) == 27000)
assert(max_knapsack_value("knapsack-test-2c.txt", false) == 27000)
assert(max_knapsack_value("knapsack-test-1.txt", true) == 60)
assert(max_knapsack_value("knapsack-test-1b.txt", true) == 60)
assert(max_knapsack_value("knapsack-test-1c.txt", true) == 60)
assert(max_knapsack_value("knapsack-test-2.txt", true) == 2700)
assert(max_knapsack_value("knapsack-test-2b.txt", true) == 27000)
assert(max_knapsack_value("knapsack-test-2c.txt", true) == 27000)
assert(optimal_bst([.1, .3, .6]) == 1.5)
assert(find_shortest_path("4-1.txt") == (-1, false))
assert(find_shortest_path("4-2.txt") == (-1, false))
